scale_fill_manual(values= c('cadetblue2', 'chocolate3', 'mediumpurple3')) +
scale_colour_brewer(palette = 'Spectral')
ggplot() +
geom_sf(data = mlra, aes(fill = MLRARSYM), alpha = 0.5) +
geom_sf(data = plots, aes(color = stratum), size = 2, pch = 23, fill = 'black') +
coord_sf(xlim = c(pbb[1],pbb[3]), ylim = c(pbb[2],pbb[4])) +
labs(fill="MLRA: ", title = "Major Land Resource Area") +
theme_void() +
theme(plot.title = element_text(hjust = 0.5),
legend.position="bottom") +
scale_fill_manual(values= c('cadetblue2', 'chocolate3', 'mediumpurple3')) +
scale_colour_brewer(palette = 'Spectral')
ggplot() +
geom_sf(data = mlra, aes(fill = MLRARSYM), alpha = 0.5) +
geom_sf(data = plots, aes(color = stratum), size = 2, pch = 18, fill = 'black') +
coord_sf(xlim = c(pbb[1],pbb[3]), ylim = c(pbb[2],pbb[4])) +
labs(fill="MLRA: ", title = "Major Land Resource Area") +
theme_void() +
theme(plot.title = element_text(hjust = 0.5),
legend.position="bottom") +
scale_fill_manual(values= c('cadetblue2', 'chocolate3', 'mediumpurple3')) +
scale_colour_brewer(palette = 'Spectral')
ggplot() +
geom_sf(data = mlra, aes(fill = MLRARSYM), alpha = 0.5) +
geom_sf(data = plots, aes(color = stratum), size = 2, pch = 18) +
coord_sf(xlim = c(pbb[1],pbb[3]), ylim = c(pbb[2],pbb[4])) +
labs(fill="MLRA: ", title = "Major Land Resource Area") +
theme_void() +
theme(plot.title = element_text(hjust = 0.5),
legend.position="bottom") +
scale_fill_manual(values= c('cadetblue2', 'chocolate3', 'mediumpurple3')) +
scale_colour_brewer(palette = 'Spectral')
ggplot() +
geom_sf(data = mlra, aes(fill = MLRARSYM), alpha = 0.5) +
geom_sf(data = plots, aes(color = stratum), size = 2, pch = 18) +
coord_sf(xlim = c(pbb[1],pbb[3]), ylim = c(pbb[2],pbb[4])) +
labs(fill="MLRA: ", title = "Major Land Resource Area") +
theme_void() +
theme(plot.title = element_text(hjust = 0.5),
legend.position="bottom") +
scale_fill_manual(values= c('cadetblue2', 'chocolate3', 'mediumpurple3')) +
scale_colour_brewer(palette = 'Dark2')
ggplot() +
geom_sf(data = mlra, aes(fill = MLRARSYM), alpha = 0.5) +
geom_sf(data = plots, aes(color = stratum), size = 4, pch = 18) +
coord_sf(xlim = c(pbb[1],pbb[3]), ylim = c(pbb[2],pbb[4])) +
labs(fill="MLRA: ", title = "Major Land Resource Area") +
theme_void() +
theme(plot.title = element_text(hjust = 0.5),
legend.position="bottom") +
scale_fill_manual(values= c('cadetblue2', 'chocolate3', 'mediumpurple3')) +
scale_colour_brewer(palette = 'Dark2')
ggplot() +
geom_sf(data = mlra, aes(fill = MLRARSYM), alpha = 0.5) +
geom_sf(data = plots, aes(color = stratum), size = 3, pch = 18) +
coord_sf(xlim = c(pbb[1],pbb[3]), ylim = c(pbb[2],pbb[4])) +
labs(fill="MLRA: ", title = "Major Land Resource Area") +
theme_void() +
theme(plot.title = element_text(hjust = 0.5),
legend.position="bottom") +
scale_fill_manual(values= c('cadetblue2', 'chocolate3', 'mediumpurple3')) +
scale_colour_brewer(palette = 'Dark2')
ggplot() +
geom_sf(data = mlra, aes(fill = MLRARSYM), alpha = 0.5) +
geom_sf(data = plots, aes(color = stratum), size = 3, pch = 18) +
coord_sf(xlim = c(pbb[1],pbb[3]), ylim = c(pbb[2],pbb[4])) +
labs(fill="MLRA: ", color = 'Stratum', title = "Major Land Resource Area") +
theme_void() +
theme(plot.title = element_text(hjust = 0.5),
legend.position="bottom") +
scale_fill_manual(values= c('cadetblue2', 'chocolate3', 'mediumpurple3')) +
scale_colour_brewer(palette = 'Dark2')
ggplot() +
geom_sf(data = mlra, aes(fill = MLRARSYM), alpha = 0.5) +
geom_sf(data = plots, aes(color = stratum), size = 3, pch = 18) +
coord_sf(xlim = c(pbb[1],pbb[3]), ylim = c(pbb[2],pbb[4])) +
labs(fill = "MLRA: ", color = 'Stratum: ', title = "Major Land Resource Area") +
theme_void() +
theme(plot.title = element_text(hjust = 0.5),
legend.position="bottom") +
scale_fill_manual(values= c('cadetblue2', 'chocolate3', 'mediumpurple3')) +
scale_colour_brewer(palette = 'Dark2')
ggplot() +
geom_sf(data = mlra, aes(fill = MLRARSYM), alpha = 0.5) +
geom_sf(data = plots, aes(color = stratum), size = 3, pch = 18) +
coord_sf(xlim = c(pbb[1],pbb[3]), ylim = c(pbb[2],pbb[4])) +
labs(fill = "MLRA: ", color = 'Stratum: ', title = "Major Land Resource Area") +
theme_void() +
theme(plot.title = element_text(hjust = 0.5),
legend.position="bottom") +
scale_fill_manual(values= c('cadetblue2', 'chocolate3', 'mediumpurple3')) +
scale_colour_brewer(palette = 'Paired')
ggplot() +
geom_sf(data = mlra, aes(fill = MLRARSYM), alpha = 0.4) +
geom_sf(data = plots, aes(color = stratum), size = 3, pch = 18) +
coord_sf(xlim = c(pbb[1],pbb[3]), ylim = c(pbb[2],pbb[4])) +
labs(fill = "MLRA: ", color = 'Stratum: ', title = "Major Land Resource Area") +
theme_void() +
theme(plot.title = element_text(hjust = 0.5),
legend.position="bottom") +
scale_fill_manual(values= c('cadetblue2', 'chocolate3', 'mediumpurple3')) +
scale_colour_brewer(palette = 'Paired')
ggplot() +
geom_sf(data = mlra, aes(fill = MLRARSYM), alpha = 0.2) +
geom_sf(data = plots, aes(color = stratum), size = 3, pch = 18) +
coord_sf(xlim = c(pbb[1],pbb[3]), ylim = c(pbb[2],pbb[4])) +
labs(fill = "MLRA: ", color = 'Stratum: ', title = "Major Land Resource Area") +
theme_void() +
theme(plot.title = element_text(hjust = 0.5),
legend.position="bottom") +
scale_fill_manual(values= c('cadetblue2', 'chocolate3', 'mediumpurple3')) +
scale_colour_brewer(palette = 'Paired')
ggplot() +
geom_sf(data = mlra, aes(fill = MLRARSYM), alpha = 0.3) +
geom_sf(data = plots, aes(color = stratum), size = 3, pch = 18) +
coord_sf(xlim = c(pbb[1],pbb[3]), ylim = c(pbb[2],pbb[4])) +
labs(fill = "MLRA: ", color = 'Stratum: ', title = "Major Land Resource Area") +
theme_void() +
theme(plot.title = element_text(hjust = 0.5),
legend.position="bottom") +
scale_fill_manual(values= c('cadetblue2', 'chocolate3', 'mediumpurple3')) +
scale_colour_brewer(palette = 'Paired')
ggplot() +
geom_sf(data = mlra, aes(fill = MLRARSYM), alpha = 0.3) +
geom_sf(data = plots, aes(color = stratum), size = 3, pch = 18) +
coord_sf(xlim = c(pbb[1],pbb[3]), ylim = c(pbb[2],pbb[4])) +
labs(fill = "MLRA: ", color = 'Stratum: ', title = "Major Land Resource Area") +
theme_void() +
theme(plot.title = element_text(hjust = 0.5),
legend.position="bottom") +
scale_fill_manual(values= c('cadetblue2', 'chocolate3', 'mediumpurple3')) #  +
ggplot() +
geom_sf(data = mlra, aes(fill = MLRARSYM), alpha = 0.3) +
geom_sf(data = plots, aes(color = stratum), size = 3, pch = 18) +
coord_sf(xlim = c(pbb[1],pbb[3]), ylim = c(pbb[2],pbb[4])) +
labs(fill = "MLRA: ", color = 'Stratum: ', title = "Major Land Resource Area") +
theme_void() +
theme(plot.title = element_text(hjust = 0.5),
legend.position="bottom") +
scale_fill_manual(values= c('cadetblue2', 'chocolate3', 'mediumpurple3'))
ggplot() +
geom_sf(data = mlra, aes(fill = MLRARSYM), alpha = 0.4) +
geom_sf(data = plots, aes(color = stratum), size = 3, pch = 18) +
coord_sf(xlim = c(pbb[1],pbb[3]), ylim = c(pbb[2],pbb[4])) +
labs(fill = "MLRA: ", color = 'Stratum: ', title = "Major Land Resource Area") +
theme_void() +
theme(plot.title = element_text(hjust = 0.5),
legend.position="bottom") +
scale_fill_manual(values= c('cadetblue2', 'chocolate3', 'mediumpurple3'))
ggplot() +
geom_sf(data = mlra, aes(fill = MLRARSYM), alpha = 0.4) +
geom_sf(data = plots, aes(color = stratum), size = 3, pch = 18) +
coord_sf(xlim = c(pbb[1],pbb[3]), ylim = c(pbb[2],pbb[4])) +
labs(fill = "MLRA: ", color = 'Stratum: ', title = "Major Land Resource Area") +
theme_void() +
theme(plot.title = element_text(hjust = 0.5)) #,
ggplot() +
geom_sf(data = mlra, aes(fill = MLRARSYM), alpha = 0.4) +
geom_sf(data = plots, aes(color = stratum), size = 3, pch = 18) +
coord_sf(xlim = c(pbb[1],pbb[3]), ylim = c(pbb[2],pbb[4])) +
labs(fill = "MLRA: ", color = 'Stratum: ', title = "Major Land Resource Area") +
theme_void() +
theme(plot.title = element_text(hjust = 0.5)),
ggplot() +
geom_sf(data = mlra, aes(fill = MLRARSYM), alpha = 0.4) +
geom_sf(data = plots, aes(color = stratum), size = 3, pch = 18) +
coord_sf(xlim = c(pbb[1],pbb[3]), ylim = c(pbb[2],pbb[4])) +
labs(fill = "MLRA: ", color = 'Stratum: ', title = "Major Land Resource Area") +
theme_void() +
theme(plot.title = element_text(hjust = 0.5),
theme(legend.title.align=0.5))  +
scale_fill_manual(values= c('cadetblue2', 'chocolate3', 'mediumpurple3'))
ggplot() +
geom_sf(data = mlra, aes(fill = MLRARSYM), alpha = 0.4) +
geom_sf(data = plots, aes(color = stratum), size = 3, pch = 18) +
coord_sf(xlim = c(pbb[1],pbb[3]), ylim = c(pbb[2],pbb[4])) +
labs(fill = "MLRA: ", color = 'Stratum: ', title = "Major Land Resource Area") +
theme_void() +
theme(plot.title = element_text(hjust = 0.5),
theme(legend.title.align=0.5))  +
scale_fill_manual(values= c('cadetblue2', 'chocolate3', 'mediumpurple3'))
ggplot() +
geom_sf(data = mlra, aes(fill = MLRARSYM), alpha = 0.4) +
geom_sf(data = plots, aes(color = stratum), size = 3, pch = 18) +
coord_sf(xlim = c(pbb[1],pbb[3]), ylim = c(pbb[2],pbb[4])) +
labs(fill = "MLRA: ", color = 'Stratum: ', title = "Major Land Resource Area") +
theme_void() +
theme(plot.title = element_text(hjust = 0.5),
legend.title.align=0.5)  +
scale_fill_manual(values= c('cadetblue2', 'chocolate3', 'mediumpurple3'))
ggplot() +
geom_sf(data = mlra, aes(fill = MLRARSYM), alpha = 0.4) +
geom_sf(data = plots, aes(color = stratum), size = 3, pch = 18) +
coord_sf(xlim = c(pbb[1],pbb[3]), ylim = c(pbb[2],pbb[4])) +
labs(fill = "MLRA: ", color = 'Stratum: ', title = "Major Land Resource Area") +
theme_void() +
theme(plot.title = element_text(hjust = 0.5),
theme(legend.title.align=0.5))  +
scale_fill_manual(values= c('cadetblue2', 'chocolate3', 'mediumpurple3'))
ggplot() +
geom_sf(data = mlra, aes(fill = MLRARSYM), alpha = 0.4) +
geom_sf(data = plots, aes(color = stratum), size = 3, pch = 18) +
coord_sf(xlim = c(pbb[1],pbb[3]), ylim = c(pbb[2],pbb[4])) +
labs(fill = "MLRA: ", color = 'Stratum: ', title = "Major Land Resource Area") +
theme_void() +
theme(plot.title = element_text(hjust = 0.5),
legend.title.align=0.5)  +
scale_fill_manual(values= c('cadetblue2', 'chocolate3', 'mediumpurple3'))
mlra_lookup <- st_intersects(plots, mlra, sparse = T)
mlra <- mlra[unique(unlist(mlra_lookup)),]
pbb <- st_bbox(plots)
plots <- plots %>%
mutate(stratum = str_remove(plot_id, '-[0-9]+'))
ggplot() +
geom_sf(data = mlra, aes(fill = MLRARSYM), alpha = 0.4) +
geom_sf(data = plots, aes(color = stratum), size = 3, pch = 18) +
coord_sf(xlim = c(pbb[1],pbb[3]), ylim = c(pbb[2],pbb[4])) +
labs(fill = "MLRA: ", color = 'Stratum: ', title = "Major Land Resource Area") +
theme_void() +
theme(plot.title = element_text(hjust = 0.5),
legend.title.align=0.5)  +
scale_fill_manual(values= c('cadetblue2', 'chocolate3', 'mediumpurple3'))
rm(mlra_lookup, pbb)
checklist_info <- read.csv(paste0(here::here(), '/data/raw/plot_task_checklist.csv'),
fileEncoding="UTF-8-BOM")
plots <- read.csv(paste0(here::here(), '/data/raw/plot_names.csv'),
fileEncoding="UTF-8-BOM")
plots <- plots[plots$point_status == 'Yes',1]
plot_checklist <- function(plots, checklist_items){
# A function to create a quick document for checking off what attributes
# you have collected at the plot
# Inputs:
# plots = a vector of plots, optionally with a column determining whether
# there are over samples or not.
# checklist_items = a data frame (perhaps made by you containing the AIM attributes
# that your crew collects.)
checklist <- data.frame(cbind(
'plot' = unlist(rep(plots, each = nrow(checklist_items))),
'attribute' = unlist(rep(checklist_items, times = length(plots))),
'collected' = '        ',
'qc' = '       ',
'submission'= '       ',
'notes' = '       '
))
# checklist <- checklist[order(checklist$plot,checklist$attribute),]
#rownames(checklist) <- NULL
}
finalized_checklists <- plot_checklist(plots = plots, checklist_items = checklist_info)
rownames(finalized_checklists) <- NULL
kableExtra::kable(finalized_checklists, "latex", booktabs = TRUE, longtable = TRUE,
caption = "Plot Data Checklist 2022 UFO AIM") |>
#kableExtra::group_rows('plots', plots) |>
kableExtra::kable_styling(latex_options = c("hold_position", "repeat_header"))
rm(checklist_info, plots, plot_checklist)
kableExtra::kable(finalized_checklists, "latex", booktabs = TRUE, longtable = TRUE,
caption = "Plot Data Checklist 2022 UFO AIM") |>
#kableExtra::group_rows('plots', plots) |>
kableExtra::kable_styling(latex_options = c("hold_position", "repeat_header"))
finalized_checklists %>%
collapse_rows_df(plot_id) %>%
kableExtra::kable(finalized_checklists, "latex",  longtable = TRUE,
caption = "Plot Data Checklist 2022 UFO AIM") |>
#kableExtra::group_rows('plots', plots) |>
kableExtra::kable_styling(latex_options = c("hold_position", "repeat_header"))
finalized_checklists %>%
collapse_rows_df(plot_id) %>%
kableExtra::kable(., "latex",  longtable = TRUE,
caption = "Plot Data Checklist 2022 UFO AIM") |>
#kableExtra::group_rows('plots', plots) |>
kableExtra::kable_styling(latex_options = c("hold_position", "repeat_header"))
??collapse_rows_df
source(here::here('scripts/functions.R'))
finalized_checklists %>%
collapse_rows_df(plot_id) %>%
kableExtra::kable(., "latex",  longtable = TRUE,
caption = "Plot Data Checklist 2022 UFO AIM") |>
#kableExtra::group_rows('plots', plots) |>
kableExtra::kable_styling(latex_options = c("hold_position", "repeat_header"))
View(finalized_checklists)
finalized_checklists %>%
collapse_rows_df(plot) %>%
kableExtra::kable(., "latex",  longtable = TRUE,
caption = "Plot Data Checklist 2022 UFO AIM") |>
#kableExtra::group_rows('plots', plots) |>
kableExtra::kable_styling(latex_options = c("hold_position", "repeat_header"))
finalized_checklists |>
collapse_rows_df(plot) |>
kableExtra::kable(finalized_checklists, "latex",  longtable = TRUE,
caption = "Plot Data Checklist 2022 UFO AIM") |>
#kableExtra::group_rows('plots', plots) |>
kableExtra::kable_styling(latex_options = c("hold_position", "repeat_header"))
finalized_checklists |>
collapse_rows_df(plot) |>
kableExtra::kable(., "latex",  longtable = TRUE,
caption = "Plot Data Checklist 2022 UFO AIM") |>
#kableExtra::group_rows('plots', plots) |>
kableExtra::kable_styling(latex_options = c("hold_position", "repeat_header"))
finalized_checklists |>
collapse_rows_df(plot) |>
kableExtra::kable( "latex",  longtable = TRUE,
caption = "Plot Data Checklist 2022 UFO AIM") |>
#kableExtra::group_rows('plots', plots) |>
kableExtra::kable_styling(latex_options = c("hold_position", "repeat_header"))
library(magrittr)
finalized_checklists |>
collapse_rows_df(plot) %>%
kableExtra::kable(., "latex",  longtable = TRUE,
caption = "Plot Data Checklist 2022 UFO AIM") |>
#kableExtra::group_rows('plots', plots) |>
kableExtra::kable_styling(latex_options = c("hold_position", "repeat_header"))
library(tidyverse)
library(tidyverse)
source(here::here('scripts/functions.R'))
checklist_info <- read.csv(paste0(here::here(), '/data/raw/plot_task_checklist.csv'),
fileEncoding="UTF-8-BOM")
plots <- read.csv(paste0(here::here(), '/data/raw/plot_names.csv'),
fileEncoding="UTF-8-BOM")
plots <- plots[plots$point_status == 'Yes',1]
plot_checklist <- function(plots, checklist_items){
# A function to create a quick document for checking off what attributes
# you have collected at the plot
# Inputs:
# plots = a vector of plots, optionally with a column determining whether
# there are over samples or not.
# checklist_items = a data frame (perhaps made by you containing the AIM attributes
# that your crew collects.)
checklist <- data.frame(cbind(
'plot' = unlist(rep(plots, each = nrow(checklist_items))),
'attribute' = unlist(rep(checklist_items, times = length(plots))),
'collected' = '        ',
'qc' = '       ',
'submission'= '       ',
'notes' = '       '
))
# checklist <- checklist[order(checklist$plot,checklist$attribute),]
#rownames(checklist) <- NULL
}
finalized_checklists <- plot_checklist(plots = plots, checklist_items = checklist_info)
rownames(finalized_checklists) <- NULL
finalized_checklists |>
collapse_rows_df(plot) %>%
kableExtra::kable(., "latex",  longtable = TRUE,
caption = "Plot Data Checklist 2022 UFO AIM") |>
#kableExtra::group_rows('plots', plots) |>
kableExtra::kable_styling(latex_options = c("hold_position", "repeat_header"))
rm(checklist_info, plots, plot_checklist)
library(tidyverse)
source(here::here('scripts/functions.R'))
checklist_info <- read.csv(paste0(here::here(), '/data/raw/plot_task_checklist.csv'),
fileEncoding="UTF-8-BOM")
plots <- read.csv(paste0(here::here(), '/data/raw/plot_names.csv'),
fileEncoding="UTF-8-BOM")
plots <- plots[plots$point_status == 'Yes',1]
plot_checklist <- function(plots, checklist_items){
# A function to create a quick document for checking off what attributes
# you have collected at the plot
# Inputs:
# plots = a vector of plots, optionally with a column determining whether
# there are over samples or not.
# checklist_items = a data frame (perhaps made by you containing the AIM attributes
# that your crew collects.)
checklist <- data.frame(cbind(
'plot' = unlist(rep(plots, each = nrow(checklist_items))),
'attribute' = unlist(rep(checklist_items, times = length(plots))),
'collected' = '        ',
'qc' = '       ',
'submission'= '       ',
'notes' = '       '
))
# checklist <- checklist[order(checklist$plot,checklist$attribute),]
#rownames(checklist) <- NULL
}
finalized_checklists <- plot_checklist(plots = plots, checklist_items = checklist_info)
rownames(finalized_checklists) <- NULL
finalized_checklists |>
collapse_rows_df(plot) %>%
kableExtra::kable(., "latex",  longtable = TRUE,
caption = "Plot Data Checklist 2022 UFO AIM") |>
#kableExtra::group_rows('plots', plots) |>
kableExtra::kable_styling(latex_options = c("hold_position", "repeat_header"))
rm(checklist_info, plots, plot_checklist)
View(finalized_checklists)
library(tidyverse)
source(here::here('scripts/functions.R'))
checklist_info <- read.csv(paste0(here::here(), '/data/raw/plot_task_checklist.csv'),
fileEncoding="UTF-8-BOM")
plots <- read.csv(paste0(here::here(), '/data/raw/plot_names.csv'),
fileEncoding="UTF-8-BOM")
plots <- plots[plots$point_status == 'Yes',1]
plot_checklist <- function(plots, checklist_items){
# A function to create a quick document for checking off what attributes
# you have collected at the plot
# Inputs:
# plots = a vector of plots, optionally with a column determining whether
# there are over samples or not.
# checklist_items = a data frame (perhaps made by you containing the AIM attributes
# that your crew collects.)
checklist <- data.frame(cbind(
'plot' = unlist(rep(plots, each = nrow(checklist_items))),
'attribute' = unlist(rep(checklist_items, times = length(plots))),
'collected' = '        ',
'qc' = '       ',
'submitted'= '       ',
'notes' = '       '
))
# checklist <- checklist[order(checklist$plot,checklist$attribute),]
#rownames(checklist) <- NULL
}
finalized_checklists <- plot_checklist(plots = plots, checklist_items = checklist_info)
rownames(finalized_checklists) <- NULL
finalized_checklists |>
collapse_rows_df(plot) %>%
kableExtra::kable(., "latex",  longtable = TRUE,
caption = "Plot Data Checklist 2022 UFO AIM") |>
#kableExtra::group_rows('plots', plots) |>
kableExtra::kable_styling(latex_options = c("hold_position", "repeat_header"))
rm(checklist_info, plots, plot_checklist)
nrow(finalized_checklists)
nrow(finalized_checklists)/2
round(nrow(finalized_checklists)/2)1)
round(nrow(finalized_checklists)/2),1)
ceiling(nrow(finalized_checklists)/2))
ceiling(nrow(finalized_checklists)/2)
floor(nrow(finalized_checklists)/2)
ceiling(nrow(finalized_checklists)/2)
fc2 <- finalized_checklists[1:floor(nrow(finalized_checklists)/2)]
fc2 <- finalized_checklists[1:floor(nrow(finalized_checklists)/2),]
fc2 <- finalized_checklists[ceiling(nrow(finalized_checklists)/2):nrow(finalized_checklists),]
View(fc2)
knitr::kable(list(fc1, fc2))
fc1 <- finalized_checklists[1:floor(nrow(finalized_checklists)/2),]
knitr::kable(list(fc1, fc2))
table_list <- list(fc1, fc2)
library(tidyverse)
source(here::here('scripts/functions.R'))
checklist_info <- read.csv(paste0(here::here(), '/data/raw/plot_task_checklist.csv'),
fileEncoding="UTF-8-BOM")
plots <- read.csv(paste0(here::here(), '/data/raw/plot_names.csv'),
fileEncoding="UTF-8-BOM")
plots <- plots[plots$point_status == 'Yes',1]
plot_checklist <- function(plots, checklist_items){
# A function to create a quick document for checking off what attributes
# you have collected at the plot
# Inputs:
# plots = a vector of plots, optionally with a column determining whether
# there are over samples or not.
# checklist_items = a data frame (perhaps made by you containing the AIM attributes
# that your crew collects.)
checklist <- data.frame(cbind(
'plot' = unlist(rep(plots, each = nrow(checklist_items))),
'attribute' = unlist(rep(checklist_items, times = length(plots))),
'collected' = '        ',
'qc' = '       ',
'submitted'= '       ',
'notes' = '       '
))
# checklist <- checklist[order(checklist$plot,checklist$attribute),]
#rownames(checklist) <- NULL
}
finalized_checklists <- plot_checklist(plots = plots, checklist_items = checklist_info)
rownames(finalized_checklists) <- NULL
floor(nrow(finalized_checklists)/2)
ceiling(nrow(finalized_checklists)/2)
fc1 <- finalized_checklists[1:floor(nrow(finalized_checklists)/2),]
fc2 <- finalized_checklists[ceiling(nrow(finalized_checklists)/2):nrow(finalized_checklists),]
table_list <- list(fc1, fc2)
table_list |>
purrr::map( collapse_rows_df(plot)) %>%
kableExtra::kable(., "latex",  longtable = TRUE,
caption = "Plot Data Checklist 2022 UFO AIM") |>
kableExtra::kable_styling(latex_options = c("hold_position", "repeat_header"))
rm(list = fns())
library(tidyverse)
source(here::here('scripts/functions.R'))
checklist_info <- read.csv(paste0(here::here(), '/data/raw/plot_task_checklist.csv'),
fileEncoding="UTF-8-BOM")
plots <- read.csv(paste0(here::here(), '/data/raw/plot_names.csv'),
fileEncoding="UTF-8-BOM")
plots <- plots[plots$point_status == 'Yes',1]
plot_checklist <- function(plots, checklist_items){
# A function to create a quick document for checking off what attributes
# you have collected at the plot
# Inputs:
# plots = a vector of plots, optionally with a column determining whether
# there are over samples or not.
# checklist_items = a data frame (perhaps made by you containing the AIM attributes
# that your crew collects.)
checklist <- data.frame(cbind(
'plot' = unlist(rep(plots, each = nrow(checklist_items))),
'attribute' = unlist(rep(checklist_items, times = length(plots))),
'collected' = '        ',
'qc' = '       ',
'submitted'= '       ',
'notes' = '       '
))
# checklist <- checklist[order(checklist$plot,checklist$attribute),]
#rownames(checklist) <- NULL
}
finalized_checklists <- plot_checklist(plots = plots, checklist_items = checklist_info)
rownames(finalized_checklists) <- NULL
# fc1 <- finalized_checklists[1:floor(nrow(finalized_checklists)/2),]
# fc2 <- finalized_checklists[ceiling(nrow(finalized_checklists)/2):nrow(finalized_checklists),]
# table_list <- list(fc1, fc2)
finalized_checklists |>
collapse_rows_df(plot) %>%
kableExtra::kable(., "latex",  longtable = TRUE,
caption = "Plot Data Checklist 2022 UFO AIM") |>
kableExtra::group_rows('plots', plots) |>
kableExtra::kable_styling(latex_options = c("hold_position", "repeat_header"))
rm(checklist_info, plots, plot_checklist)
rm(list=lsf.str())
rm(checklist_info, plots, plot_checklist, public_lands_colours, finalized_checklists)
